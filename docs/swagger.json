{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "The responses of the open api in swagger focus on the data field rather than the code and the message fields",
        "title": "CNS-BACKEND",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "101.42.88.184",
    "basePath": "/v0",
    "paths": {
        "/commits": {
            "get": {
                "description": "query commit",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commits"
                ],
                "summary": "query commit",
                "operationId": "QueryCommit",
                "parameters": [
                    {
                        "type": "string",
                        "name": "order_state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CommitCore"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            },
            "post": {
                "description": "make commit for record commit detials for using when register",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commits"
                ],
                "summary": "make commit",
                "operationId": "MakeCommits",
                "parameters": [
                    {
                        "description": "make commit request",
                        "name": "make_commit_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CommitCore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.MakeCommitResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/commits/{commit_hash}": {
            "get": {
                "description": "get commit details by commit hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commits"
                ],
                "summary": "get commit",
                "operationId": "GetCommit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "commit hash",
                        "name": "commit_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommitCore"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/registers/order/refresh-url/{commit_hash}": {
            "put": {
                "description": "refresh register order url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registers"
                ],
                "summary": "refresh register order url",
                "operationId": "RefreshRegisterOrderUrl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "commit hash",
                        "name": "commit_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.MakeRegisterOrderResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/registers/order/{commit_hash}": {
            "get": {
                "description": "get register order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registers"
                ],
                "summary": "get register order",
                "operationId": "GetRegisterOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "commit hash",
                        "name": "commit_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterOrderCore"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            },
            "post": {
                "description": "make register order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registers"
                ],
                "summary": "make register order",
                "operationId": "MakeRegisterOrder",
                "parameters": [
                    {
                        "description": "make register order request",
                        "name": "make_register_order_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.MakeRegisterOrderReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "commit hash",
                        "name": "commit_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.MakeRegisterOrderResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/renews/order": {
            "post": {
                "description": "make renew order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Renews"
                ],
                "summary": "make renew order",
                "operationId": "MakeRenewOrder",
                "parameters": [
                    {
                        "description": "make renew order request",
                        "name": "make_renew_order_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.MakeRenewOrderReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "commit hash",
                        "name": "commit_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.MakeRenewOrderResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/renews/order/refresh-url/{id}": {
            "put": {
                "description": "refresh renew order url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Renews"
                ],
                "summary": "refresh renew order url",
                "operationId": "RefreshRenewOrderUrl",
                "parameters": [
                    {
                        "type": "number",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.MakeRenewOrderResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/renews/order/{id}": {
            "get": {
                "description": "get renew order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Renews"
                ],
                "summary": "get renew order",
                "operationId": "GetRenewOrder",
                "parameters": [
                    {
                        "type": "number",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RenewOrderCore"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.CnsErrorDetailInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cns_errors.CnsErrorDetailInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.CommitCore": {
            "type": "object",
            "required": [
                "commit_hash"
            ],
            "properties": {
                "commit_hash": {
                    "type": "string"
                },
                "data": {
                    "description": "32字节",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "integer"
                },
                "fuses": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "order_state": {
                    "type": "integer"
                },
                "owner": {
                    "description": "base32地址或hex地址",
                    "type": "string"
                },
                "resolver": {
                    "type": "string"
                },
                "reverse_record": {
                    "type": "boolean"
                },
                "secret": {
                    "description": "32字节",
                    "type": "string"
                },
                "wrapper_expiry": {
                    "type": "integer"
                }
            }
        },
        "models.RegisterOrderCore": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "单位为分",
                    "type": "integer"
                },
                "appName": {
                    "type": "string"
                },
                "code_url": {
                    "type": "string"
                },
                "commit_hash": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "h5_url": {
                    "type": "string"
                },
                "refund_state": {
                    "type": "string"
                },
                "time_expire": {
                    "type": "string"
                },
                "trade_no": {
                    "type": "string"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_state": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "tx_state": {
                    "type": "integer"
                }
            }
        },
        "models.RenewOrderCore": {
            "type": "object",
            "required": [
                "cns_name",
                "duration",
                "wrapper_expiry"
            ],
            "properties": {
                "amount": {
                    "description": "单位为分",
                    "type": "integer"
                },
                "appName": {
                    "type": "string"
                },
                "cns_name": {
                    "type": "string"
                },
                "code_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "fuses": {
                    "type": "integer"
                },
                "h5_url": {
                    "type": "string"
                },
                "refund_state": {
                    "type": "string"
                },
                "time_expire": {
                    "type": "string"
                },
                "trade_no": {
                    "type": "string"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_state": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "tx_state": {
                    "type": "integer"
                },
                "wrapper_expiry": {
                    "type": "integer"
                }
            }
        },
        "services.MakeCommitResp": {
            "type": "object",
            "properties": {
                "commit_hash": {
                    "type": "string"
                }
            }
        },
        "services.MakeRegisterOrderReq": {
            "type": "object",
            "required": [
                "description",
                "trade_type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                }
            }
        },
        "services.MakeRegisterOrderResp": {
            "type": "object",
            "properties": {
                "code_url": {
                    "type": "string"
                },
                "commit_hash": {
                    "type": "string"
                },
                "h5_url": {
                    "type": "string"
                },
                "trade_no": {
                    "type": "string"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                }
            }
        },
        "services.MakeRenewOrderReq": {
            "type": "object",
            "required": [
                "cns_name",
                "description",
                "duration",
                "trade_type",
                "wrapper_expiry"
            ],
            "properties": {
                "cns_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "fuses": {
                    "type": "integer"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                },
                "wrapper_expiry": {
                    "type": "integer"
                }
            }
        },
        "services.MakeRenewOrderResp": {
            "type": "object",
            "properties": {
                "code_url": {
                    "type": "string"
                },
                "h5_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "trade_no": {
                    "type": "string"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                }
            }
        }
    }
}